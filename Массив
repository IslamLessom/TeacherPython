#Массивы

В Питоне нет структуры данных, полностью соответствующей массиву. Однако, есть списки, которые являются их надмножеством, то есть это те же массивы, но с расширенным функционалом. Эти структуры удобнее в использовании, но цена такого удобства, как всегда, производительность и потребляемые ресурсы. И массив, и список – это упорядоченные коллекции, но разница между ними заключается в том, что классический массив должен содержать элементы только одного типа, а список Python может содержать любые элементы.

shapito_list = [1, 'qwerty', 4/3, [345, ['a', {5, 6, 7}]]]
print(shapito_list)
# Вывод:
[1, 'qwerty', 1.3333333333333333, [345, ['a', {5, 6, 7}]]]

Существует несколько способ создать массив. Ниже приведены примеры как это можно сделать.
КОПИРОВАТЬ
можно_так = [1, 2, 3, 4, 5]
можно_так_2 = list('итерируемый объект')
а_можно_и_так = [i for i in range(5)]
print('можно_так:', можно_так)
print('можно_так_2:', можно_так_2)
print('а_можно_и_так:', а_можно_и_так)
print('можно_так[0]:', можно_так[0])
print('а_можно_и_так[3]:', а_можно_и_так[3])
# Вывод:
можно_так: [1, 2, 3, 4, 5]
можно_так_2: ['и', 'т', 'е', 'р', 'и', 'р', 'у', 'е', 'м', 'ы', 'й', ' ', 'о', 'б', 'ъ', 'е', 'к', 'т']
а_можно_и_так: [0, 1, 2, 3, 4]
можно_так[0]: 1
а_можно_и_так[3]: 3
